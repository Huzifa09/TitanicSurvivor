{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1-Sib_0qPdrxYv6hGkhj6xaN0SBhdIHDN","authorship_tag":"ABX9TyMNKq0kpNVLcNRDzh+4FEm4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"toWESYSfja16"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n"]},{"cell_type":"code","source":["tableTitanic = pd.read_csv('/content/drive/MyDrive/DSC 341 (LAB)/titanic-trimmed.csv')\n","tableTitanic"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"afB-Bckyj2O1","executionInfo":{"status":"ok","timestamp":1685067355432,"user_tz":300,"elapsed":71,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"96053935-b56d-49c0-846c-45d79ff56ac1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       pid pclass  survived     sex   age  sibsp  parch        fare  \\\n","0        1    1st         1  female  29.0      0      0  211.337494   \n","1        2    1st         1    male   NaN      1      2  151.550003   \n","2        3    1st         0  female   2.0      1      2  151.550003   \n","3        4    1st         0    male  30.0      1      2  151.550003   \n","4        5    1st         0  female  25.0      1      2  151.550003   \n","...    ...    ...       ...     ...   ...    ...    ...         ...   \n","1304  1305    3rd         0  female  14.5      1      0   14.454200   \n","1305  1306    3rd         0  female   NaN      1      0   14.454200   \n","1306  1307    3rd         0    male  26.5      0      0    7.225000   \n","1307  1308    3rd         0    male  27.0      0      0    7.225000   \n","1308  1309    3rd         0    male  29.0      0      0    7.875000   \n","\n","         embarked  \n","0     Southampton  \n","1     Southampton  \n","2     Southampton  \n","3     Southampton  \n","4     Southampton  \n","...           ...  \n","1304    Cherbourg  \n","1305    Cherbourg  \n","1306    Cherbourg  \n","1307    Cherbourg  \n","1308  Southampton  \n","\n","[1309 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-f623a756-f0ea-4ddc-b3d4-93a5a3fe4ee6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pid</th>\n","      <th>pclass</th>\n","      <th>survived</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1st</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>29.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>211.337494</td>\n","      <td>Southampton</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1st</td>\n","      <td>1</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>Southampton</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1st</td>\n","      <td>0</td>\n","      <td>female</td>\n","      <td>2.0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>Southampton</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1st</td>\n","      <td>0</td>\n","      <td>male</td>\n","      <td>30.0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>Southampton</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1st</td>\n","      <td>0</td>\n","      <td>female</td>\n","      <td>25.0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>Southampton</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1304</th>\n","      <td>1305</td>\n","      <td>3rd</td>\n","      <td>0</td>\n","      <td>female</td>\n","      <td>14.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>14.454200</td>\n","      <td>Cherbourg</td>\n","    </tr>\n","    <tr>\n","      <th>1305</th>\n","      <td>1306</td>\n","      <td>3rd</td>\n","      <td>0</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>14.454200</td>\n","      <td>Cherbourg</td>\n","    </tr>\n","    <tr>\n","      <th>1306</th>\n","      <td>1307</td>\n","      <td>3rd</td>\n","      <td>0</td>\n","      <td>male</td>\n","      <td>26.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.225000</td>\n","      <td>Cherbourg</td>\n","    </tr>\n","    <tr>\n","      <th>1307</th>\n","      <td>1308</td>\n","      <td>3rd</td>\n","      <td>0</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.225000</td>\n","      <td>Cherbourg</td>\n","    </tr>\n","    <tr>\n","      <th>1308</th>\n","      <td>1309</td>\n","      <td>3rd</td>\n","      <td>0</td>\n","      <td>male</td>\n","      <td>29.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.875000</td>\n","      <td>Southampton</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1309 rows Ã— 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f623a756-f0ea-4ddc-b3d4-93a5a3fe4ee6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f623a756-f0ea-4ddc-b3d4-93a5a3fe4ee6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f623a756-f0ea-4ddc-b3d4-93a5a3fe4ee6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["tableTitanic.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"xHs_z0_Skhk_","executionInfo":{"status":"ok","timestamp":1685067356967,"user_tz":300,"elapsed":91,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"b8ae41c1-8343-44fa-89f6-4e9b5ba861d8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   pid pclass  survived     sex   age  sibsp  parch        fare     embarked\n","0    1    1st         1  female  29.0      0      0  211.337494  Southampton\n","1    2    1st         1    male   NaN      1      2  151.550003  Southampton\n","2    3    1st         0  female   2.0      1      2  151.550003  Southampton"],"text/html":["\n","  <div id=\"df-c9f78498-81af-4a6c-aaa9-ea6e8375c9c3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pid</th>\n","      <th>pclass</th>\n","      <th>survived</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1st</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>29.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>211.337494</td>\n","      <td>Southampton</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1st</td>\n","      <td>1</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>Southampton</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1st</td>\n","      <td>0</td>\n","      <td>female</td>\n","      <td>2.0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>Southampton</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c9f78498-81af-4a6c-aaa9-ea6e8375c9c3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c9f78498-81af-4a6c-aaa9-ea6e8375c9c3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c9f78498-81af-4a6c-aaa9-ea6e8375c9c3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["tableTitanic.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qnBq_rjVkoiF","executionInfo":{"status":"ok","timestamp":1685067358431,"user_tz":300,"elapsed":97,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"ec56e9a8-7b9c-43d5-9ebf-7623aa74e575"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1309, 9)"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["tableTitanic.describe(include=\"all\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"19VBTO9yk1bh","executionInfo":{"status":"ok","timestamp":1685067359419,"user_tz":300,"elapsed":73,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"8327057c-21f3-40db-97f7-ef3eda484a4d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                pid pclass     survived   sex          age        sibsp  \\\n","count   1309.000000   1309  1309.000000  1309  1045.000000  1309.000000   \n","unique          NaN      3          NaN     2          NaN          NaN   \n","top             NaN    3rd          NaN  male          NaN          NaN   \n","freq            NaN    709          NaN   843          NaN          NaN   \n","mean     655.000000    NaN     0.381971   NaN    29.908852     0.498854   \n","std      378.020061    NaN     0.486055   NaN    14.392485     1.041658   \n","min        1.000000    NaN     0.000000   NaN     0.166700     0.000000   \n","25%      328.000000    NaN     0.000000   NaN    21.000000     0.000000   \n","50%      655.000000    NaN     0.000000   NaN    28.000000     0.000000   \n","75%      982.000000    NaN     1.000000   NaN    39.000000     1.000000   \n","max     1309.000000    NaN     1.000000   NaN    80.000000     8.000000   \n","\n","              parch         fare     embarked  \n","count   1309.000000  1308.000000         1307  \n","unique          NaN          NaN            3  \n","top             NaN          NaN  Southampton  \n","freq            NaN          NaN          914  \n","mean       0.385027    33.295479          NaN  \n","std        0.865560    51.758669          NaN  \n","min        0.000000     0.000000          NaN  \n","25%        0.000000     7.895800          NaN  \n","50%        0.000000    14.454200          NaN  \n","75%        0.000000    31.275000          NaN  \n","max        9.000000   512.329224          NaN  "],"text/html":["\n","  <div id=\"df-2ebaafcd-f01b-45a3-967f-af0020ce0568\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pid</th>\n","      <th>pclass</th>\n","      <th>survived</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1309.000000</td>\n","      <td>1309</td>\n","      <td>1309.000000</td>\n","      <td>1309</td>\n","      <td>1045.000000</td>\n","      <td>1309.000000</td>\n","      <td>1309.000000</td>\n","      <td>1308.000000</td>\n","      <td>1307</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>NaN</td>\n","      <td>3rd</td>\n","      <td>NaN</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Southampton</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>NaN</td>\n","      <td>709</td>\n","      <td>NaN</td>\n","      <td>843</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>914</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>655.000000</td>\n","      <td>NaN</td>\n","      <td>0.381971</td>\n","      <td>NaN</td>\n","      <td>29.908852</td>\n","      <td>0.498854</td>\n","      <td>0.385027</td>\n","      <td>33.295479</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>378.020061</td>\n","      <td>NaN</td>\n","      <td>0.486055</td>\n","      <td>NaN</td>\n","      <td>14.392485</td>\n","      <td>1.041658</td>\n","      <td>0.865560</td>\n","      <td>51.758669</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>0.166700</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>328.000000</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>21.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.895800</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>655.000000</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>982.000000</td>\n","      <td>NaN</td>\n","      <td>1.000000</td>\n","      <td>NaN</td>\n","      <td>39.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.275000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1309.000000</td>\n","      <td>NaN</td>\n","      <td>1.000000</td>\n","      <td>NaN</td>\n","      <td>80.000000</td>\n","      <td>8.000000</td>\n","      <td>9.000000</td>\n","      <td>512.329224</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ebaafcd-f01b-45a3-967f-af0020ce0568')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2ebaafcd-f01b-45a3-967f-af0020ce0568 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2ebaafcd-f01b-45a3-967f-af0020ce0568');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["tableTitanic[tableTitanic.age.isnull()].shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PRzc9PPRlOpe","executionInfo":{"status":"ok","timestamp":1685067361316,"user_tz":300,"elapsed":68,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"2fb9129d-29f6-435e-8f19-9ffc57de84a5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(264, 9)"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["age_mean = tableTitanic.age.mean()\n","tableTitanic.age.fillna(age_mean, axis=0, inplace=True)\n","tableTitanic.dropna(axis=0, inplace=True)"],"metadata":{"id":"xc6wAYwarOUV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tableTitanic.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2wJGKfFRmFeg","executionInfo":{"status":"ok","timestamp":1685067363294,"user_tz":300,"elapsed":71,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"f28973c5-79e2-4812-e264-c1c85fba8f26"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1306, 9)"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["tableTitanic.set_index('pid', drop= True, inplace= True)\n","tableTitanic.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"Pz77y_ibmUBp","executionInfo":{"status":"ok","timestamp":1685067364439,"user_tz":300,"elapsed":83,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"8c05b81e-963b-44a4-ad83-83c924901f6b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    pclass  survived     sex        age  sibsp  parch        fare     embarked\n","pid                                                                           \n","1      1st         1  female  29.000000      0      0  211.337494  Southampton\n","2      1st         1    male  29.908852      1      2  151.550003  Southampton\n","3      1st         0  female   2.000000      1      2  151.550003  Southampton\n","4      1st         0    male  30.000000      1      2  151.550003  Southampton\n","5      1st         0  female  25.000000      1      2  151.550003  Southampton"],"text/html":["\n","  <div id=\"df-f1bb824c-5726-4320-89f9-55a4d5a18c3b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pclass</th>\n","      <th>survived</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>embarked</th>\n","    </tr>\n","    <tr>\n","      <th>pid</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>1st</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>29.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>211.337494</td>\n","      <td>Southampton</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1st</td>\n","      <td>1</td>\n","      <td>male</td>\n","      <td>29.908852</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>Southampton</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1st</td>\n","      <td>0</td>\n","      <td>female</td>\n","      <td>2.000000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>Southampton</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1st</td>\n","      <td>0</td>\n","      <td>male</td>\n","      <td>30.000000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>Southampton</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1st</td>\n","      <td>0</td>\n","      <td>female</td>\n","      <td>25.000000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>Southampton</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f1bb824c-5726-4320-89f9-55a4d5a18c3b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f1bb824c-5726-4320-89f9-55a4d5a18c3b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f1bb824c-5726-4320-89f9-55a4d5a18c3b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["tableTitanic.describe().T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"t_aCWJnHms3E","executionInfo":{"status":"ok","timestamp":1685067366164,"user_tz":300,"elapsed":81,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"16a9e988-f42a-44ba-da08-7283deed13c3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           count       mean        std     min      25%        50%     75%  \\\n","survived  1306.0   0.381317   0.485896  0.0000   0.0000   0.000000   1.000   \n","age       1306.0  29.854661  12.812320  0.1667  22.0000  29.908852  35.000   \n","sibsp     1306.0   0.500000   1.042580  0.0000   0.0000   0.000000   1.000   \n","parch     1306.0   0.385911   0.866357  0.0000   0.0000   0.000000   0.000   \n","fare      1306.0  33.223956  51.765986  0.0000   7.8958  14.454200  31.275   \n","\n","                 max  \n","survived    1.000000  \n","age        80.000000  \n","sibsp       8.000000  \n","parch       9.000000  \n","fare      512.329224  "],"text/html":["\n","  <div id=\"df-788daa50-dda2-4389-a056-3aa99d43f1d2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>survived</th>\n","      <td>1306.0</td>\n","      <td>0.381317</td>\n","      <td>0.485896</td>\n","      <td>0.0000</td>\n","      <td>0.0000</td>\n","      <td>0.000000</td>\n","      <td>1.000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>age</th>\n","      <td>1306.0</td>\n","      <td>29.854661</td>\n","      <td>12.812320</td>\n","      <td>0.1667</td>\n","      <td>22.0000</td>\n","      <td>29.908852</td>\n","      <td>35.000</td>\n","      <td>80.000000</td>\n","    </tr>\n","    <tr>\n","      <th>sibsp</th>\n","      <td>1306.0</td>\n","      <td>0.500000</td>\n","      <td>1.042580</td>\n","      <td>0.0000</td>\n","      <td>0.0000</td>\n","      <td>0.000000</td>\n","      <td>1.000</td>\n","      <td>8.000000</td>\n","    </tr>\n","    <tr>\n","      <th>parch</th>\n","      <td>1306.0</td>\n","      <td>0.385911</td>\n","      <td>0.866357</td>\n","      <td>0.0000</td>\n","      <td>0.0000</td>\n","      <td>0.000000</td>\n","      <td>0.000</td>\n","      <td>9.000000</td>\n","    </tr>\n","    <tr>\n","      <th>fare</th>\n","      <td>1306.0</td>\n","      <td>33.223956</td>\n","      <td>51.765986</td>\n","      <td>0.0000</td>\n","      <td>7.8958</td>\n","      <td>14.454200</td>\n","      <td>31.275</td>\n","      <td>512.329224</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-788daa50-dda2-4389-a056-3aa99d43f1d2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-788daa50-dda2-4389-a056-3aa99d43f1d2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-788daa50-dda2-4389-a056-3aa99d43f1d2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["tableTitanic_ssf = pd.get_dummies(tableTitanic)\n","tableTitanic_ssf.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":301},"id":"qT8dHRP5nzOR","executionInfo":{"status":"ok","timestamp":1685067367923,"user_tz":300,"elapsed":248,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"25d35f69-513c-43f8-e043-a626c7b8aafd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     survived        age  sibsp  parch        fare  pclass_1st  pclass_2nd  \\\n","pid                                                                          \n","1           1  29.000000      0      0  211.337494           1           0   \n","2           1  29.908852      1      2  151.550003           1           0   \n","3           0   2.000000      1      2  151.550003           1           0   \n","4           0  30.000000      1      2  151.550003           1           0   \n","5           0  25.000000      1      2  151.550003           1           0   \n","\n","     pclass_3rd  sex_female  sex_male  embarked_Cherbourg  \\\n","pid                                                         \n","1             0           1         0                   0   \n","2             0           0         1                   0   \n","3             0           1         0                   0   \n","4             0           0         1                   0   \n","5             0           1         0                   0   \n","\n","     embarked_Queenstown  embarked_Southampton  \n","pid                                             \n","1                      0                     1  \n","2                      0                     1  \n","3                      0                     1  \n","4                      0                     1  \n","5                      0                     1  "],"text/html":["\n","  <div id=\"df-550b570c-2299-4c25-a9bc-b63cee0e5315\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>survived</th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>pclass_1st</th>\n","      <th>pclass_2nd</th>\n","      <th>pclass_3rd</th>\n","      <th>sex_female</th>\n","      <th>sex_male</th>\n","      <th>embarked_Cherbourg</th>\n","      <th>embarked_Queenstown</th>\n","      <th>embarked_Southampton</th>\n","    </tr>\n","    <tr>\n","      <th>pid</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>29.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>211.337494</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>29.908852</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>2.000000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>30.000000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0</td>\n","      <td>25.000000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-550b570c-2299-4c25-a9bc-b63cee0e5315')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-550b570c-2299-4c25-a9bc-b63cee0e5315 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-550b570c-2299-4c25-a9bc-b63cee0e5315');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["tableTitanic_names = tableTitanic_ssf.columns.values\n","tableTitanic_names"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JJCuYAeNoQrP","executionInfo":{"status":"ok","timestamp":1685067369634,"user_tz":300,"elapsed":208,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"f12c0f0b-3aad-48e9-fb8d-3b644597a910"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['survived', 'age', 'sibsp', 'parch', 'fare', 'pclass_1st',\n","       'pclass_2nd', 'pclass_3rd', 'sex_female', 'sex_male',\n","       'embarked_Cherbourg', 'embarked_Queenstown',\n","       'embarked_Southampton'], dtype=object)"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["y = tableTitanic_ssf['survived']\n","X = tableTitanic_ssf[tableTitanic_names[1:]]\n","X.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":301},"id":"pnN9Cwalp8tO","executionInfo":{"status":"ok","timestamp":1685067371385,"user_tz":300,"elapsed":215,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"e331cf39-7685-4f72-8dc5-bb7a08901d14"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           age  sibsp  parch        fare  pclass_1st  pclass_2nd  pclass_3rd  \\\n","pid                                                                            \n","1    29.000000      0      0  211.337494           1           0           0   \n","2    29.908852      1      2  151.550003           1           0           0   \n","3     2.000000      1      2  151.550003           1           0           0   \n","4    30.000000      1      2  151.550003           1           0           0   \n","5    25.000000      1      2  151.550003           1           0           0   \n","\n","     sex_female  sex_male  embarked_Cherbourg  embarked_Queenstown  \\\n","pid                                                                  \n","1             1         0                   0                    0   \n","2             0         1                   0                    0   \n","3             1         0                   0                    0   \n","4             0         1                   0                    0   \n","5             1         0                   0                    0   \n","\n","     embarked_Southampton  \n","pid                        \n","1                       1  \n","2                       1  \n","3                       1  \n","4                       1  \n","5                       1  "],"text/html":["\n","  <div id=\"df-1db209d8-072a-4bea-9232-b198ef91535b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sibsp</th>\n","      <th>parch</th>\n","      <th>fare</th>\n","      <th>pclass_1st</th>\n","      <th>pclass_2nd</th>\n","      <th>pclass_3rd</th>\n","      <th>sex_female</th>\n","      <th>sex_male</th>\n","      <th>embarked_Cherbourg</th>\n","      <th>embarked_Queenstown</th>\n","      <th>embarked_Southampton</th>\n","    </tr>\n","    <tr>\n","      <th>pid</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>29.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>211.337494</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>29.908852</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2.000000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>30.000000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>25.000000</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>151.550003</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1db209d8-072a-4bea-9232-b198ef91535b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1db209d8-072a-4bea-9232-b198ef91535b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1db209d8-072a-4bea-9232-b198ef91535b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.2, random_state = 33)"],"metadata":{"id":"-ojDCtjyPiKP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn import metrics\n","\n","def measure_performance(X, y, clif, show_accuracy =True, show_classification_report =True, show_confussion_matrix =True):\n","   y_pred = clif.predict(X)\n","   if show_accuracy:\n","     print(\"Accuracy:{0:.3f}\".format(metrics.accuracy_score(y,y_pred)), \"\\n\")\n","   if show_classification_report:\n","     print(\"Classification report\")\n","     print(metrics.classification_report(y,y_pred),\"\\n\")\n","\n","   if show_confussion_matrix:\n","     print(\"Confussion matrix\")\n","     print(metrics.confusion_matrix(y, y_pred),\"\\n\")"],"metadata":{"id":"kziMsDkWQYjv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn import tree\n","dt = tree.DecisionTreeClassifier(criterion='gini')\n","dt = dt.fit(X_train, y_train)"],"metadata":{"id":"ySC2WIDZTQUN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn import metrics\n","measure_performance(X_test, y_test, dt, show_confussion_matrix=False, show_classification_report=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2m8LnYaOTbsB","executionInfo":{"status":"ok","timestamp":1685067470035,"user_tz":300,"elapsed":93,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"6ef39a96-d29d-4961-b4e0-14d204527101"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy:0.737 \n","\n"]}]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","rf = RandomForestClassifier(n_estimators=10, random_state=33)\n","rf = rf.fit(X_train, y_train)"],"metadata":{"id":"d2HqLrIxYLG1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["measure_performance(X_test, y_test, rf, show_confussion_matrix=False, show_classification_report=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rtQB_uMKZKSR","executionInfo":{"status":"ok","timestamp":1685067479246,"user_tz":300,"elapsed":82,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"71c5e5da-eb73-4411-e816-616e12e24897"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy:0.775 \n","\n"]}]},{"cell_type":"code","source":["print(rf.get_params())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vtpYZ5eRaeSm","executionInfo":{"status":"ok","timestamp":1685067480713,"user_tz":300,"elapsed":101,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"f2ddf822-bc5f-4aba-c528-f8823e04663d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 10, 'n_jobs': None, 'oob_score': False, 'random_state': 33, 'verbose': 0, 'warm_start': False}\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt"],"metadata":{"id":"J-heD_SYdLWt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import KFold\n","def calc_params(X, y, clf, param_values, param_name, K):\n","\n","    #convert input to Numpy arrays\n","    X = np.array(X)\n","    y = np.array(y)\n","\n","    #initialize training and testing score arrays with zeros\n","    train_scores = np.zeros(len(param_values))\n","    test_scores = np.zeros(len(param_values))\n","\n","    #iterate over the different parameter values\n","    for i, param_value in enumerate(param_values):\n","\n","      #set classifier parameters\n","      clf.set_params(**{param_name:param_value})\n","\n","      #intiialize the k scores obtained for each fold\n","      k_train_scores = np.zeros(K)\n","      k_test_scores = np.zeros(K)\n","\n","      #create KFold cross validation\n","      cv = KFold(n_splits=K, shuffle=True, random_state=0)\n","\n","      #iterate over the K fold\n","      j = 0\n","      for train, test in cv.split(X):\n","        #fit the classifier in the corresponding fold\n","        #and obtaon the corresponding accuracy scores on train and test sets\n","        clf.fit(X[train], y[train])\n","        k_train_scores[j] = clf.score(X[train], y[train])\n","        k_test_scores[j] = clf.score(X[test], y[test])\n","        j += 1\n","\n","      #store the mean of the K fold scores\n","      train_scores[i] = np.mean(k_train_scores)\n","      test_scores[i] = np.mean(k_test_scores)\n","      print(param_name, '=', param_value, 'Train =', train_scores[i], \"Test =\", test_scores[i])\n","\n","    #plot the training and testing scores in a log scale\n","    plt.plot(param_values, train_scores, label='Train', alpha=0.4, lw=2, c='b')\n","    plt.plot(param_values, test_scores, label='X-Val', alpha=0.4, lw=2, c='g')\n","    plt.legend(loc=7)\n","    plt.xlabel(param_name + \"vales\")\n","    plt.ylabel(\"Mean cross validation accuracy\")\n","\n","    #return the training and testing scores on each parameter value\n","    return train_scores, test_scores\n","\n","rf = RandomForestClassifier(random_state=33)\n","num_trees = [5, 50, 500, 1000]\n","max_depths = [2, 4, 5, 8]\n","\n","# Tuning number of trees\n","train_scores, test_scores = calc_params(X_train, y_train, rf, num_trees, 'n_estimators', 5)\n","\n","# Tuning maximum depth of the tree\n","train_scores, test_scores = calc_params(X_train, y_train, rf, max_depths, 'max_depth', 5)\n"],"metadata":{"id":"-sEnx4LlamvN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["msl = range(1,6)\n","print(msl)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2Lj3lwMxmD1A","executionInfo":{"status":"ok","timestamp":1683232057901,"user_tz":300,"elapsed":94,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"a8ec8396-7125-41e3-9abb-8544b7cda536"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["range(1, 6)\n"]}]},{"cell_type":"code","source":["rf = RandomForestClassifier(n_estimators = 10, random_state= 33)\n","train_scores, test_scores = calc_params(X_train, y_train, rf, msl, 'min_samples_leaf', 5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":537},"id":"k0QAIuwXmmbn","executionInfo":{"status":"ok","timestamp":1683232193516,"user_tz":300,"elapsed":1363,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"e21a7380-d39f-4c91-d835-01c3674f055d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["min_samples_leaf = 1 Train = 0.9588121364925651 Test = 0.7748895841001104\n","min_samples_leaf = 2 Train = 0.8948752256253044 Test = 0.7845049687154951\n","min_samples_leaf = 3 Train = 0.8675784316534397 Test = 0.7959974236290025\n","min_samples_leaf = 4 Train = 0.8491384694725381 Test = 0.7749217887375782\n","min_samples_leaf = 5 Train = 0.840278772598344 Test = 0.7864326463010672\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["m_depth = [1,2,3,4,5,6,7,8]\n","\n","rf = RandomForestClassifier(n_estimators= 10, random_state=33)\n","train_scores, test_scores = calc_params(X_train, y_train, rf, m_depth, 'max_depth',5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":589},"id":"3OmxuZdseFDm","executionInfo":{"status":"ok","timestamp":1683232561689,"user_tz":300,"elapsed":2332,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"fcd73115-97e8-442b-dcf8-1f6bd78c99a3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["max_depth = 1 Train = 0.7806529524682692 Test = 0.7806772175193227\n","max_depth = 2 Train = 0.7808924734263532 Test = 0.7806772175193227\n","max_depth = 3 Train = 0.8014835400968398 Test = 0.7816341553183659\n","max_depth = 4 Train = 0.8170498237973813 Test = 0.8007867132867134\n","max_depth = 5 Train = 0.8295037675844483 Test = 0.7959882223040117\n","max_depth = 6 Train = 0.8496169383720596 Test = 0.7988498343761501\n","max_depth = 7 Train = 0.8690161304185885 Test = 0.7969497607655501\n","max_depth = 8 Train = 0.8864957167005703 Test = 0.7844957673905043\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["nest = range(5,101,5)\n","nest"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lOlCyiuferIt","executionInfo":{"status":"ok","timestamp":1683232585602,"user_tz":300,"elapsed":111,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"b1ef57da-edbf-4897-9afa-470a800ce3f3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["range(5, 101, 5)"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["rf= RandomForestClassifier(n_estimators=10, random_state=33)\n","train_scores, test_scores = calc_params(X_train, y_train, rf, nest, 'n_estimators',5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":797},"id":"K3yVyK0HewSM","executionInfo":{"status":"ok","timestamp":1683232692007,"user_tz":300,"elapsed":17277,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"ee58b067-89d3-429a-ef26-bcf78260e6ea"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["n_estimators = 5 Train = 0.9468389536716042 Test = 0.7729711078395288\n","n_estimators = 10 Train = 0.9588121364925651 Test = 0.7748895841001104\n","n_estimators = 15 Train = 0.9664762341346016 Test = 0.7806450128818551\n","n_estimators = 20 Train = 0.9693501991232847 Test = 0.7816157526683842\n","n_estimators = 25 Train = 0.9719834971205914 Test = 0.7844911667280089\n","n_estimators = 30 Train = 0.9722233045869982 Test = 0.7796972764078027\n","n_estimators = 35 Train = 0.9727020599948428 Test = 0.7797064777327936\n","n_estimators = 40 Train = 0.9731808154026875 Test = 0.7777834008097166\n","n_estimators = 45 Train = 0.9734203363607712 Test = 0.7749125874125874\n","n_estimators = 50 Train = 0.9736592843022089 Test = 0.7797064777327936\n","n_estimators = 55 Train = 0.9738990917686158 Test = 0.7816203533308796\n","n_estimators = 60 Train = 0.9741383262183765 Test = 0.7797064777327936\n","n_estimators = 65 Train = 0.9743778471764605 Test = 0.7816249539933751\n","n_estimators = 70 Train = 0.9743778471764605 Test = 0.7787541405962459\n","n_estimators = 75 Train = 0.9743778471764605 Test = 0.7787495399337504\n","n_estimators = 80 Train = 0.9743778471764605 Test = 0.7787587412587412\n","n_estimators = 85 Train = 0.9743778471764605 Test = 0.7768402649981597\n","n_estimators = 90 Train = 0.9743778471764605 Test = 0.7797156790577844\n","n_estimators = 95 Train = 0.9743778471764605 Test = 0.7806726168568273\n","n_estimators = 100 Train = 0.9743778471764605 Test = 0.7787587412587412\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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3d2fGMv58+cBAE5OTnU7GCIiImpWtB6k/f777+O9995DTk7OU+88ODgYX3/9NbZt24YrV67gzTffRGFhIQIDAwEAkydPxuLFi5X14+PjER0djRs3buCPP/7Aiy++CIVCgYULFyrrzJ49G9u3b8fOnTthbm6O9PR0pKeno7i4GACQkpKClStXIiEhAbdu3cJPP/2EyZMnY/DgwejevftTHxMRERE1fVqPQVq/fj2uX78OZ2dnuLq6olWrVirrExMTNW5r/PjxuH//PpYuXYr09HT06NEDMTExyoHbqampEIv/yeFKSkoQEhKCGzduwMzMDCNHjsR3330HS0tLZZ0vvvgCQOWj/I+KjIzE1KlTIZFIcPjwYURERKCwsBAuLi4ICAhASEiIlmeCiIiImiut50F60pNcy5Yte6qAmgrOg0RERNT0aHr91jpBokpMkIiIiJqeepsokoiIiKi503oMklgsfuwj/bp4wo2IiIhIn7ROkPbt26fyuby8HOfOncO2bds40zQRERE1Czobg7Rz505ERUXhxx9/1EVzjR7HIBERETU9DT4GqV+/fiqTPhIRERE1VTpJkIqLi/H555+jdevWumiOiIiISK+0HoOk/lJaQRDw8OFDmJqaYvv27ToNjoiIiEgftE6Q1q5dq5IgicVi2NnZwcfHB1ZWVjoNjoiIiEgftE6Qpk6dWg9hEBERETUeWo9BioyMxJ49e6qV79mzB9u2bdNJUERERET6pHWCFBYWBltb22rl9vb2WLVqlU6CIiIiItInrROk1NRUuLu7Vyt3dXVFamqqToIiIiIi0ietEyR7e3tcvHixWvmFCxdgY2Ojk6CIiIiI9EnrBGnChAmYN28efv/9d8jlcsjlchw5cgRvvfUW/v3vf9dHjEREREQNSuun2FauXIlbt25h2LBhMDSs3FyhUGDy5Mkcg0RERETNQp3fxXbt2jWcP38eUqkUnp6ecHV11XVsjRrfxUZERNT0aHr91roHqUqHDh3QoUOHum5ORERE1GhpPQYpICAAH3/8cbXy1atXY9y4cToJioiIiEiftE6Qjh8/jpEjR1YrHzFiBI4fP66ToIiIiIj0SesEqaCgABKJpFq5kZER8vPzdRIUERERkT5pnSB5enoiKiqqWvnu3bvRtWtXnQRFREREpE9aD9JesmQJxo4di5SUFAwdOhQAEBsbi127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80nfDMWGsG9lz94hImq09JogSSQSeHt7IzY2VjkGSaFQIDY2FnPmzHnstnv27EFpaSleffXVWuts3rwZ3t7e8PLyemIs58+fh1gsrvHJuYaiEBRITEvUqK6R2KjWGV2b26sjiIiIGpreb7EFBwdjypQp6N27N/r27YuIiAgUFhYiMDAQADB58mS0bt0aYWFhKttt3rwZo0ePho2NTY3t5ufnY8+ePfj000+rrYuLi0N8fDyef/55mJubIy4uDkFBQXj11VdhZaW/OVRaGbWCWCRWjsdoZdSq1pdM8rF7IiKi+qP3BGn8+PG4f/8+li5divT0dPTo0QMxMTHKgdupqakQi1V7Q5KTk3HixAn89ttvtba7e/duCIKACRMmVFtnbGyM3bt3Y/ny5SgtLYW7uzuCgoJUxhjpg0gkwsgOI5VT1jf1WVGJiIiaKr3Pg9RUNeV5kIiIiFoqTa/fHKhCREREpIYJEhEREZEaJkhEREREapggEREREalhgkRERESkhgkSERERkRomSERERERqmCARERERqWGCRERERKSGCRIRERGRGiZIRERERGqYIBERERGpYYJEREREpMZQ3wE0VYIgAKh8KzARERE1DVXX7arreG2YINXRw4cPAQAuLi56joSIiIi09fDhQ1hYWNS6XiQ8KYWiGikUCty7dw/m5uYQiUT6DqfFyM/Ph4uLC+7cuQOZTKbvcFoMnnf94bnXH557/anPcy8IAh4+fAhnZ2eIxbWPNGIPUh2JxWK0adNG32G0WDKZjH+w9IDnXX947vWH515/6uvcP67nqAoHaRMRERGpYYJEREREpIYJEjUpxsbGWLZsGYyNjfUdSovC864/PPf6w3OvP43h3HOQNhEREZEa9iARERERqWGCRERERKSGCRIRERGRGiZI1OiEhYWhT58+MDc3h729PUaPHo3k5GSVOiUlJZg9ezZsbGxgZmaGgIAAZGRk6Cni5umjjz6CSCTC/PnzlWU87/Xr7t27ePXVV2FjYwOpVApPT0+cPXtWuV4QBCxduhROTk6QSqXw9fXFtWvX9Bhx0yeXy7FkyRK4u7tDKpXCw8MDK1euVHkNBc+77hw/fhz+/v5wdnaGSCTC/v37VdZrcq5zcnIwadIkyGQyWFpaYvr06SgoKNB5rEyQqNE5duwYZs+ejT///BOHDh1CeXk5XnjhBRQWFirrBAUF4eeff8aePXtw7Ngx3Lt3D2PHjtVj1M3LmTNn8OWXX6J79+4q5Tzv9efBgwcYOHAgjIyM8Ouvv+Ly5cv49NNPYWVlpayzevVqfP7559i0aRPi4+PRqlUr+Pn5oaSkRI+RN20ff/wxvvjiC6xfvx5XrlzBxx9/jNWrV2PdunXKOjzvulNYWAgvLy9s2LChxvWanOtJkybhf//7Hw4dOoRffvkFx48fx+uvv677YAWiRi4zM1MAIBw7dkwQBEHIzc0VjIyMhD179ijrXLlyRQAgxMXF6SvMZuPhw4dChw4dhEOHDglDhgwR3nrrLUEQeN7r27vvvisMGjSo1vUKhUJwdHQUPvnkE2VZbm6uYGxsLOzatashQmyWXnrpJWHatGkqZWPHjhUmTZokCALPe30CIOzbt0/5WZNzffnyZQGAcObMGWWdX3/9VRCJRMLdu3d1Gh97kKjRy8vLAwBYW1sDABISElBeXg5fX19lnc6dO6Nt27aIi4vTS4zNyezZs/HSSy+pnF+A572+/fTTT+jduzfGjRsHe3t79OzZE19//bVy/c2bN5Genq5y/i0sLODj48Pz/xQGDBiA2NhYXL16FQBw4cIFnDhxAiNGjADA896QNDnXcXFxsLS0RO/evZV1fH19IRaLER8fr9N4+C42atQUCgXmz5+PgQMHolu3bgCA9PR0SCQSWFpaqtR1cHBAenq6HqJsPnbv3o3ExEScOXOm2jqe9/p148YNfPHFFwgODsZ7772HM2fOYN68eZBIJJgyZYryHDs4OKhsx/P/dBYtWoT8/Hx07twZBgYGkMvl+PDDDzFp0iQA4HlvQJqc6/T0dNjb26usNzQ0hLW1tc7/ezBBokZt9uzZuHTpEk6cOKHvUJq9O3fu4K233sKhQ4dgYmKi73BaHIVCgd69e2PVqlUAgJ49e+LSpUvYtGkTpkyZoufomq/vv/8eO3bswM6dO/HMM8/g/PnzmD9/PpydnXneWzjeYqNGa86cOfjll1/w+++/o02bNspyR0dHlJWVITc3V6V+RkYGHB0dGzjK5iMhIQGZmZno1asXDA0NYWhoiGPHjuHzzz+HoaEhHBwceN7rkZOTE7p27apS1qVLF6SmpgKA8hyrPzXI8/903nnnHSxatAj//ve/4enpiddeew1BQUEICwsDwPPekDQ5146OjsjMzFRZX1FRgZycHJ3/92CCRI2OIAiYM2cO9u3bhyNHjsDd3V1lvbe3N4yMjBAbG6ssS05ORmpqKvr379/Q4TYbw4YNw19//YXz588rl969e2PSpEnKn3ne68/AgQOrTWdx9epVuLq6AgDc3d3h6Oiocv7z8/MRHx/P8/8UioqKIBarXgoNDAygUCgA8Lw3JE3Odf/+/ZGbm4uEhARlnSNHjkChUMDHx0e3Ael0yDeRDrz55puChYWFcPToUSEtLU25FBUVKevMmjVLaNu2rXDkyBHh7NmzQv/+/YX+/fvrMerm6dGn2ASB570+nT59WjA0NBQ+/PBD4dq1a8KOHTsEU1NTYfv27co6H330kWBpaSn8+OOPwsWLF4VRo0YJ7u7uQnFxsR4jb9qmTJkitG7dWvjll1+EmzdvCtHR0YKtra2wcOFCZR2ed915+PChcO7cOeHcuXMCACE8PFw4d+6ccPv2bUEQNDvXL774otCzZ08hPj5eOHHihNChQwdhwoQJOo+VCRI1OgBqXCIjI5V1iouLhf/85z+ClZWVYGpqKowZM0ZIS0vTX9DNlHqCxPNev37++WehW7dugrGxsdC5c2fhq6++UlmvUCiEJUuWCA4ODoKxsbEwbNgwITk5WU/RNg/5+fnCW2+9JbRt21YwMTER2rVrJ7z//vtCaWmpsg7Pu+78/vvvNf59nzJliiAImp3r7OxsYcKECYKZmZkgk8mEwMBA4eHDhzqPVSQIj0wXSkREREQcg0RERESkjgkSERERkRomSERERERqmCARERERqWGCRERERKSGCRIRERGRGiZIRERERGqYIBERERGpYYJERE2Km5sbIiIi9B1Go3Lr1i2IRCKcP39e36EQNRtMkIioUdq6dSssLS2rlZ85cwavv/56ve+fiRhRy2ao7wCIiLRhZ2en7xC0UlZWBolEou8wiEhL7EEiosd67rnnMG/ePCxcuBDW1tZwdHTE8uXLNdo2NzcXM2bMgJ2dHWQyGYYOHYoLFy4o11+4cAHPP/88zM3NIZPJ4O3tjbNnz+Lo0aMIDAxEXl4eRCIRRCKRcp/qPTsikQhffvkl/vWvf8HU1BRdunRBXFwcrl+/jueeew6tWrXCgAEDkJKSotwmJSUFo0aNgoODA8zMzNCnTx8cPnxY5Zhv376NoKAg5f6r7N27F8888wyMjY3h5uaGTz/9VOWY3dzcsHLlSkyePBkymQyvv/46ysrKMGfOHDg5OcHExASurq4ICwsDAEycOBHjx49XaaO8vBy2trb49ttvAQAxMTEYNGgQLC0tYWNjg3/9618qx1OTS5cuYcSIETAzM4ODgwNee+01ZGVlKdf/8MMP8PT0hFQqhY2NDXx9fVFYWPjYNolaFJ2//paImpUhQ4YIMplMWL58uXD16lVh27ZtgkgkEn777bcnbuvr6yv4+/sLZ86cEa5evSq8/fbbgo2NjZCdnS0IgiA888wzwquvvipcuXJFuHr1qvD9998L58+fF0pLS4WIiAhBJpMJaWlpQlpamvJt3a6ursLatWuV+wAgtG7dWoiKihKSk5OF0aNHC25ubsLQoUOFmJgY4fLly0K/fv2EF198UbnN+fPnhU2bNgl//fWXcPXqVSEkJEQwMTERbt++LQhC5dvC27RpI4SGhir3LwiCcPbsWUEsFguhoaFCcnKyEBkZKUilUiEyMlLZtqurqyCTyYQ1a9YI169fF65fvy588skngouLi3D8+HHh1q1bwh9//CHs3LlTEARB+OWXXwSpVKryNvKff/5ZkEqlQn5+viAIgvDDDz8Ie/fuFa5duyacO3dO8Pf3Fzw9PQW5XC4IgiDcvHlTACCcO3dOEARBePDggWBnZycsXrxYuHLlipCYmCgMHz5ceP755wVBEIR79+4JhoaGQnh4uHDz5k3h4sWLwoYNG+rljehETRUTJCJ6rCFDhgiDBg1SKevTp4/w7rvvPna7P/74Q5DJZEJJSYlKuYeHh/Dll18KgiAI5ubmwtatW2vcPjIyUrCwsKhWXlOCFBISovwcFxcnABA2b96sLNu1a5dgYmLy2HifeeYZYd26dbXuRxAEYeLEicLw4cNVyt555x2ha9euKtuNHj1apc7cuXOFoUOHCgqFotp+y8vLBVtbW+Hbb79Vlk2YMEEYP358rbHev39fACD89ddfgiBUT5BWrlwpvPDCCyrb3LlzRwAgJCcnCwkJCQIA4datW7Xug6il4y02Inqi7t27q3x2cnJCZmbmY7e5cOECCgoKYGNjAzMzM+Vy8+ZN5e2h4OBgzJgxA76+vvjoo4+eeNtIk/gcHBwAAJ6eniplJSUlyM/PBwAUFBRgwYIF6NKlCywtLWFmZoYrV64gNTX1sfu5cuUKBg4cqFI2cOBAXLt2DXK5XFnWu3dvlTpTp07F+fPn0alTJ8ybNw+//fabcp2hoSFeeeUV7NixAwBQWFiIH3/8EZMmTVLWuXbtGiZMmIB27dpBJpPBzc0NAGqN98KFC/j9999Vznvnzp0BVN5e9PLywrBhw+Dp6Ylx48bh66+/xoMHDx577EQtDQdpE9ETGRkZqXwWiURQKBSP3aagoABOTk44evRotXVVT6ctX74cEydOxIEDB/Drr79i2bJl2L17N8aMGVPn+KrGC9VUVhXzggULcOjQIaxZswbt27eHVCrFyy+/jLKyMq32W5tWrVqpfO7Vqxdu3ryJX3/9FYcPH8Yrr7wCX19f/PDDDwCASZMmYciQIcjMzMShQ4cglUrx4osvKrf39/eHq6srvv76azg7O0OhUKBbt261xltQUAB/f398/PHH1dY5OTnBwMAAhw4dwqlTp/Dbb79h3bp1eP/99xEfHw93d3ednAOipo4JEhHVi169eiE9PR2GhobKHo+adOzYER07dkRQUBAmTJiAyMhIjBkzBhKJRKVXRpdOnjyJqVOnKhOxgoIC3Lp1S6VOTfvv0qULTp48Wa2tjh07wsDA4LH7lMlkGD9+PMaPH4+XX34ZL774InJycmBtbY0BAwbAxcUFUVFR+PXXXzFu3DhlgpednY3k5GR8/fXXePbZZwEAJ06ceOy+evXqhb1798LNzQ2GhjX/mReJRBg4cCAGDhyIpUuXwtXVFfv27UNwcPBj2yZqKXiLjYjqha+vL/r374/Ro0fjt99+w61bt3Dq1Cm8//77OHv2LIqLizFnzhwcPXoUt2/fxsmTJ3HmzBl06dIFQOXTYAUFBYiNjUVWVhaKiop0FluHDh0QHR2N8+fP48KFC5g4cWK1HjE3NzccP34cd+/eVT799fbbbyM2NhYrV67E1atXsW3bNqxfvx4LFix47P7Cw8Oxa9cuJCUl4erVq9izZw8cHR1V5nmaOHEiNm3ahEOHDqncXrOysoKNjQ2++uorXL9+HUeOHHliEjN79mzk5ORgwoQJOHPmDFJSUvDf//4XgYGBkMvliI+Px6pVq3D27FmkpqYiOjoa9+/fV557ImKCRET1RCQS4eDBgxg8eDACAwPRsWNH/Pvf/8bt27fh4OAAAwMDZGdnY/LkyejYsSNeeeUVjBgxAitWrAAADBgwALNmzcL48eNhZ2eH1atX6yy28PBwWFlZYcCAAfD394efnx969eqlUic0NBS3bt2Ch4eHcu6lXr164fvvv8fu3bvRrVs3LF26FKGhoZg6depj92dubo7Vq1ejd+/e6NOnD27duoWDBw9CLP7nT/CkSZNw+fJltG7dWmWck1gsxu7du5GQkIBu3bohKCgIn3zyyWP35+zsjJMnT0Iul+OFF16Ap6cn5s+fD0tLS4jFYshkMhw/fhwjR45Ex44dERISgk8//RQjRozQ8kwSNV8iQRAEfQdBRERE1JiwB4mIiIhIDRMkIqqTHTt2qDxG/ujyzDPP6Ds8IqKnwltsRFQnDx8+REZGRo3rjIyM4Orq2sARERHpDhMkIiIiIjW8xUZERESkhgkSERERkRomSERERERqmCARERERqWGCRERERKSGCRIRERGRGiZIRERERGqYIBERERGp+X9OXo7WijK/bgAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["rf = RandomForestClassifier(n_estimators=25, min_samples_leaf=3, max_depth=4)\n","rf = rf.fit(X_train, y_train)\n","\n","measure_performance(X_test, y_test, rf, show_confussion_matrix=False, show_classification_report=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vj4wDI0OfL1j","executionInfo":{"status":"ok","timestamp":1683232819777,"user_tz":300,"elapsed":299,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"2f28e821-9673-4686-8cef-9649fbec4096"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy:0.821 \n","\n"]}]},{"cell_type":"code","source":["rf.feature_importances_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xc6uN_3afpHe","executionInfo":{"status":"ok","timestamp":1683232878293,"user_tz":300,"elapsed":112,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"128c5a7c-9f5d-44d0-d574-eb65f130513d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.05078316, 0.02005001, 0.02926262, 0.1510598 , 0.03124249,\n","       0.00656804, 0.09318174, 0.32267353, 0.26876288, 0.01363388,\n","       0.00142554, 0.0113563 ])"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["def plot_feature_importances(model, n_features, feature_names):\n","  plt.barh(range(n_features), model.feature_importances_, align='center')\n","  plt.yticks(np.arange(n_features), feature_names)\n","  plt.xlabel(\"Feature importance\")\n","  plt.ylabel(\"Feature\")\n","  plt.ylim(-1, n_features)\n","\n","features = tableTitanic_names[1:]\n","plot_feature_importances(rf, len(features), features)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"aaz5_sLUf3Y3","executionInfo":{"status":"ok","timestamp":1683233338055,"user_tz":300,"elapsed":894,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"7facc6ea-7caf-4256-8364-36800fc7283f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["rf.estimators_[:3]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z5j-C2Nnhr3O","executionInfo":{"status":"ok","timestamp":1683233377867,"user_tz":300,"elapsed":131,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"600f51b2-fe50-4dcb-f3e0-fc7d7d447aea"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[DecisionTreeClassifier(max_depth=4, max_features='sqrt', min_samples_leaf=3,\n","                        random_state=1614820812),\n"," DecisionTreeClassifier(max_depth=4, max_features='sqrt', min_samples_leaf=3,\n","                        random_state=1954854135),\n"," DecisionTreeClassifier(max_depth=4, max_features='sqrt', min_samples_leaf=3,\n","                        random_state=1683210982)]"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","\n","rf = RandomForestClassifier(n_estimators=500, max_depth=8, random_state=33)\n","rf.fit(X_train, y_train)\n","y_pred = rf.predict(X_test)\n","\n","confusion_matrix_result = confusion_matrix(y_test, y_pred)\n","print(\"Confusion matrix:\")\n","print(confusion_matrix_result)"],"metadata":{"id":"J0DJeVVa8o-e","executionInfo":{"status":"ok","timestamp":1685069145245,"user_tz":300,"elapsed":1516,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"73a85f15-f74b-4571-88c2-1147c8b6ac8a","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion matrix:\n","[[145  16]\n"," [ 29  72]]\n"]}]},{"cell_type":"code","source":["import graphviz\n","from sklearn.tree import export_graphviz\n","\n","dot_data = export_graphviz(rf.estimators_[0],out_file=None, feature_names=features,\n","                           class_names=[\"No\",\"Yes\"], filled=True, rotate=True)\n","graph = graphviz.Source(dot_data)\n","graph"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"FdNcAhxEiOJG","executionInfo":{"status":"ok","timestamp":1683233501159,"user_tz":300,"elapsed":427,"user":{"displayName":"huzifa jaffery","userId":"15104014662309417227"}},"outputId":"ee0a2d64-bc00-4a63-ef19-de0c5090dd42"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"image/svg+xml":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: Tree Pages: 1 -->\n<svg width=\"919pt\" height=\"850pt\"\n viewBox=\"0.00 0.00 919.00 850.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 846)\">\n<title>Tree</title>\n<polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-846 915,-846 915,4 -4,4\"/>\n<!-- 0 -->\n<g id=\"node1\" class=\"node\">\n<title>0</title>\n<polygon fill=\"#f7d7c0\" stroke=\"black\" points=\"125,-368.5 0,-368.5 0,-285.5 125,-285.5 125,-368.5\"/>\n<text text-anchor=\"middle\" x=\"62.5\" y=\"-353.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">sex_male &lt;= 0.5</text>\n<text text-anchor=\"middle\" x=\"62.5\" y=\"-338.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.482</text>\n<text text-anchor=\"middle\" x=\"62.5\" y=\"-323.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 669</text>\n<text text-anchor=\"middle\" x=\"62.5\" y=\"-308.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [620, 424]</text>\n<text text-anchor=\"middle\" x=\"62.5\" y=\"-293.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = No</text>\n</g>\n<!-- 1 -->\n<g id=\"node2\" class=\"node\">\n<title>1</title>\n<polygon fill=\"#7abded\" stroke=\"black\" points=\"352,-447.5 161,-447.5 161,-364.5 352,-364.5 352,-447.5\"/>\n<text text-anchor=\"middle\" x=\"256.5\" y=\"-432.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">embarked_Cherbourg &lt;= 0.5</text>\n<text text-anchor=\"middle\" x=\"256.5\" y=\"-417.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.371</text>\n<text text-anchor=\"middle\" x=\"256.5\" y=\"-402.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 257</text>\n<text text-anchor=\"middle\" x=\"256.5\" y=\"-387.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [99, 303]</text>\n<text text-anchor=\"middle\" x=\"256.5\" y=\"-372.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = Yes</text>\n</g>\n<!-- 0&#45;&gt;1 -->\n<g id=\"edge1\" class=\"edge\">\n<title>0&#45;&gt;1</title>\n<path fill=\"none\" stroke=\"black\" d=\"M125.04,-352.32C133.51,-355.81 142.39,-359.46 151.36,-363.15\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"150.16,-366.44 160.73,-367.01 152.82,-359.97 150.16,-366.44\"/>\n<text text-anchor=\"middle\" x=\"137.66\" y=\"-372.93\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">True</text>\n</g>\n<!-- 14 -->\n<g id=\"node15\" class=\"node\">\n<title>14</title>\n<polygon fill=\"#eb9e67\" stroke=\"black\" points=\"319,-318.5 194,-318.5 194,-235.5 319,-235.5 319,-318.5\"/>\n<text text-anchor=\"middle\" x=\"256.5\" y=\"-303.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">sibsp &lt;= 2.5</text>\n<text text-anchor=\"middle\" x=\"256.5\" y=\"-288.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.306</text>\n<text text-anchor=\"middle\" x=\"256.5\" y=\"-273.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 412</text>\n<text text-anchor=\"middle\" x=\"256.5\" y=\"-258.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [521, 121]</text>\n<text text-anchor=\"middle\" x=\"256.5\" y=\"-243.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = No</text>\n</g>\n<!-- 0&#45;&gt;14 -->\n<g id=\"edge14\" class=\"edge\">\n<title>0&#45;&gt;14</title>\n<path fill=\"none\" stroke=\"black\" d=\"M125.04,-310.97C143.9,-306.06 164.81,-300.62 184.26,-295.55\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"185.18,-298.93 193.98,-293.02 183.42,-292.15 185.18,-298.93\"/>\n<text text-anchor=\"middle\" x=\"172.41\" y=\"-276.67\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">False</text>\n</g>\n<!-- 2 -->\n<g id=\"node3\" class=\"node\">\n<title>2</title>\n<polygon fill=\"#8ec7f0\" stroke=\"black\" points=\"509,-648.5 392,-648.5 392,-565.5 509,-565.5 509,-648.5\"/>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-633.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">fare &lt;= 73.754</text>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-618.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.42</text>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-603.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 197</text>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-588.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [92, 215]</text>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-573.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = Yes</text>\n</g>\n<!-- 1&#45;&gt;2 -->\n<g id=\"edge2\" class=\"edge\">\n<title>1&#45;&gt;2</title>\n<path fill=\"none\" stroke=\"black\" d=\"M297.28,-447.65C327.92,-479.72 370.35,-524.14 402.63,-557.93\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"400.33,-560.59 409.77,-565.41 405.39,-555.76 400.33,-560.59\"/>\n</g>\n<!-- 9 -->\n<g id=\"node10\" class=\"node\">\n<title>9</title>\n<polygon fill=\"#49a5e7\" stroke=\"black\" points=\"503,-447.5 398,-447.5 398,-364.5 503,-364.5 503,-447.5\"/>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-432.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">fare &lt;= 14.852</text>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-417.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.137</text>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-402.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 60</text>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-387.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [7, 88]</text>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-372.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = Yes</text>\n</g>\n<!-- 1&#45;&gt;9 -->\n<g id=\"edge9\" class=\"edge\">\n<title>1&#45;&gt;9</title>\n<path fill=\"none\" stroke=\"black\" d=\"M352.09,-406C364.2,-406 376.33,-406 387.72,-406\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"387.95,-409.5 397.95,-406 387.95,-402.5 387.95,-409.5\"/>\n</g>\n<!-- 3 -->\n<g id=\"node4\" class=\"node\">\n<title>3</title>\n<polygon fill=\"#9bcdf2\" stroke=\"black\" points=\"716,-763.5 591,-763.5 591,-680.5 716,-680.5 716,-763.5\"/>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-748.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">pclass_3rd &lt;= 0.5</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-733.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.443</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-718.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 176</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-703.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [91, 184]</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-688.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = Yes</text>\n</g>\n<!-- 2&#45;&gt;3 -->\n<g id=\"edge3\" class=\"edge\">\n<title>2&#45;&gt;3</title>\n<path fill=\"none\" stroke=\"black\" d=\"M509.1,-639.95C531.73,-652.9 557.93,-667.89 581.7,-681.49\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"580.26,-684.7 590.68,-686.63 583.74,-678.62 580.26,-684.7\"/>\n</g>\n<!-- 6 -->\n<g id=\"node7\" class=\"node\">\n<title>6</title>\n<polygon fill=\"#3fa0e6\" stroke=\"black\" points=\"710,-648.5 597,-648.5 597,-565.5 710,-565.5 710,-648.5\"/>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-633.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">fare &lt;= 135.775</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-618.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.061</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-603.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 21</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-588.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [1, 31]</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-573.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = Yes</text>\n</g>\n<!-- 2&#45;&gt;6 -->\n<g id=\"edge6\" class=\"edge\">\n<title>2&#45;&gt;6</title>\n<path fill=\"none\" stroke=\"black\" d=\"M509.1,-607C533.36,-607 561.74,-607 586.81,-607\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"586.97,-610.5 596.97,-607 586.97,-603.5 586.97,-610.5\"/>\n</g>\n<!-- 4 -->\n<g id=\"node5\" class=\"node\">\n<title>4</title>\n<polygon fill=\"#50a9e8\" stroke=\"black\" points=\"911,-842 794,-842 794,-774 911,-774 911,-842\"/>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-826.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.188</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-811.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 73</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-796.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [12, 102]</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-781.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = Yes</text>\n</g>\n<!-- 3&#45;&gt;4 -->\n<g id=\"edge4\" class=\"edge\">\n<title>3&#45;&gt;4</title>\n<path fill=\"none\" stroke=\"black\" d=\"M716.02,-748.86C737.75,-758.34 762.3,-769.06 784.46,-778.73\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"783.24,-782.02 793.8,-782.81 786.04,-775.6 783.24,-782.02\"/>\n</g>\n<!-- 5 -->\n<g id=\"node6\" class=\"node\">\n<title>5</title>\n<polygon fill=\"#f8fbfe\" stroke=\"black\" points=\"907.5,-756 797.5,-756 797.5,-688 907.5,-688 907.5,-756\"/>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-740.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.5</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-725.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 103</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-710.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [79, 82]</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-695.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = Yes</text>\n</g>\n<!-- 3&#45;&gt;5 -->\n<g id=\"edge5\" class=\"edge\">\n<title>3&#45;&gt;5</title>\n<path fill=\"none\" stroke=\"black\" d=\"M716.02,-722C738.64,-722 764.29,-722 787.15,-722\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"787.44,-725.5 797.44,-722 787.44,-718.5 787.44,-725.5\"/>\n</g>\n<!-- 7 -->\n<g id=\"node8\" class=\"node\">\n<title>7</title>\n<polygon fill=\"#399de5\" stroke=\"black\" points=\"903.5,-670 801.5,-670 801.5,-602 903.5,-602 903.5,-670\"/>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-654.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-639.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 10</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-624.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [0, 16]</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-609.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = Yes</text>\n</g>\n<!-- 6&#45;&gt;7 -->\n<g id=\"edge7\" class=\"edge\">\n<title>6&#45;&gt;7</title>\n<path fill=\"none\" stroke=\"black\" d=\"M710.16,-615.19C735.47,-618.92 765.47,-623.34 791.31,-627.14\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"790.95,-630.62 801.36,-628.62 791.97,-623.7 790.95,-630.62\"/>\n</g>\n<!-- 8 -->\n<g id=\"node9\" class=\"node\">\n<title>8</title>\n<polygon fill=\"#46a4e7\" stroke=\"black\" points=\"903.5,-584 801.5,-584 801.5,-516 903.5,-516 903.5,-584\"/>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-568.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.117</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-553.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 11</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-538.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [1, 15]</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-523.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = Yes</text>\n</g>\n<!-- 6&#45;&gt;8 -->\n<g id=\"edge8\" class=\"edge\">\n<title>6&#45;&gt;8</title>\n<path fill=\"none\" stroke=\"black\" d=\"M710.16,-590.89C735.59,-583.54 765.74,-574.81 791.65,-567.32\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"792.72,-570.65 801.36,-564.51 790.78,-563.93 792.72,-570.65\"/>\n</g>\n<!-- 10 -->\n<g id=\"node11\" class=\"node\">\n<title>10</title>\n<polygon fill=\"#88c4ef\" stroke=\"black\" points=\"704.5,-520 602.5,-520 602.5,-452 704.5,-452 704.5,-520\"/>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-504.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.408</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-489.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 10</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-474.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [4, 10]</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-459.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = Yes</text>\n</g>\n<!-- 9&#45;&gt;10 -->\n<g id=\"edge10\" class=\"edge\">\n<title>9&#45;&gt;10</title>\n<path fill=\"none\" stroke=\"black\" d=\"M503,-426.5C530.38,-437.4 564.18,-450.85 592.72,-462.21\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"591.59,-465.52 602.18,-465.97 594.18,-459.02 591.59,-465.52\"/>\n</g>\n<!-- 11 -->\n<g id=\"node12\" class=\"node\">\n<title>11</title>\n<polygon fill=\"#41a1e6\" stroke=\"black\" points=\"706,-433.5 601,-433.5 601,-350.5 706,-350.5 706,-433.5\"/>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-418.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">fare &lt;= 36.629</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-403.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.071</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-388.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 50</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-373.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [3, 78]</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-358.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = Yes</text>\n</g>\n<!-- 9&#45;&gt;11 -->\n<g id=\"edge11\" class=\"edge\">\n<title>9&#45;&gt;11</title>\n<path fill=\"none\" stroke=\"black\" d=\"M503,-402.41C529.73,-400.55 562.58,-398.26 590.67,-396.31\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"591.05,-399.79 600.78,-395.6 590.56,-392.81 591.05,-399.79\"/>\n</g>\n<!-- 12 -->\n<g id=\"node13\" class=\"node\">\n<title>12</title>\n<polygon fill=\"#53aae8\" stroke=\"black\" points=\"903.5,-498 801.5,-498 801.5,-430 903.5,-430 903.5,-498\"/>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-482.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.204</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-467.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 15</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-452.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [3, 23]</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-437.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = Yes</text>\n</g>\n<!-- 11&#45;&gt;12 -->\n<g id=\"edge12\" class=\"edge\">\n<title>11&#45;&gt;12</title>\n<path fill=\"none\" stroke=\"black\" d=\"M706,-410.82C732.31,-420.44 764.47,-432.19 791.85,-442.2\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"790.73,-445.51 801.32,-445.66 793.13,-438.94 790.73,-445.51\"/>\n</g>\n<!-- 13 -->\n<g id=\"node14\" class=\"node\">\n<title>13</title>\n<polygon fill=\"#399de5\" stroke=\"black\" points=\"903.5,-412 801.5,-412 801.5,-344 903.5,-344 903.5,-412\"/>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-396.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-381.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 35</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-366.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [0, 55]</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-351.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = Yes</text>\n</g>\n<!-- 11&#45;&gt;13 -->\n<g id=\"edge13\" class=\"edge\">\n<title>11&#45;&gt;13</title>\n<path fill=\"none\" stroke=\"black\" d=\"M706,-388.34C732.08,-386.49 763.91,-384.22 791.13,-382.29\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"791.59,-385.77 801.32,-381.57 791.1,-378.78 791.59,-385.77\"/>\n</g>\n<!-- 15 -->\n<g id=\"node16\" class=\"node\">\n<title>15</title>\n<polygon fill=\"#eb9f69\" stroke=\"black\" points=\"513,-318.5 388,-318.5 388,-235.5 513,-235.5 513,-318.5\"/>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-303.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">parch &lt;= 0.5</text>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-288.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.314</text>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-273.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 399</text>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-258.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [500, 121]</text>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-243.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = No</text>\n</g>\n<!-- 14&#45;&gt;15 -->\n<g id=\"edge15\" class=\"edge\">\n<title>14&#45;&gt;15</title>\n<path fill=\"none\" stroke=\"black\" d=\"M319.04,-277C337.73,-277 358.43,-277 377.73,-277\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"377.98,-280.5 387.98,-277 377.98,-273.5 377.98,-280.5\"/>\n</g>\n<!-- 22 -->\n<g id=\"node23\" class=\"node\">\n<title>22</title>\n<polygon fill=\"#e58139\" stroke=\"black\" points=\"501.5,-217 399.5,-217 399.5,-149 501.5,-149 501.5,-217\"/>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-201.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.0</text>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-186.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 13</text>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [21, 0]</text>\n<text text-anchor=\"middle\" x=\"450.5\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = No</text>\n</g>\n<!-- 14&#45;&gt;22 -->\n<g id=\"edge22\" class=\"edge\">\n<title>14&#45;&gt;22</title>\n<path fill=\"none\" stroke=\"black\" d=\"M319.04,-246.87C341.79,-235.73 367.52,-223.14 390.08,-212.09\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"391.77,-215.16 399.21,-207.62 388.69,-208.88 391.77,-215.16\"/>\n</g>\n<!-- 16 -->\n<g id=\"node17\" class=\"node\">\n<title>16</title>\n<polygon fill=\"#ea9a60\" stroke=\"black\" points=\"758,-318.5 549,-318.5 549,-235.5 758,-235.5 758,-318.5\"/>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-303.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">embarked_Southampton &lt;= 0.5</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-288.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.273</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-273.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 357</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-258.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [467, 91]</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-243.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = No</text>\n</g>\n<!-- 15&#45;&gt;16 -->\n<g id=\"edge16\" class=\"edge\">\n<title>15&#45;&gt;16</title>\n<path fill=\"none\" stroke=\"black\" d=\"M513.17,-277C521.3,-277 529.83,-277 538.5,-277\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"538.71,-280.5 548.71,-277 538.71,-273.5 538.71,-280.5\"/>\n</g>\n<!-- 19 -->\n<g id=\"node20\" class=\"node\">\n<title>19</title>\n<polygon fill=\"#fdf4ed\" stroke=\"black\" points=\"708.5,-161.5 598.5,-161.5 598.5,-78.5 708.5,-78.5 708.5,-161.5\"/>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-146.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">parch &lt;= 1.5</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-131.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.499</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-116.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 42</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-101.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [33, 30]</text>\n<text text-anchor=\"middle\" x=\"653.5\" y=\"-86.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = No</text>\n</g>\n<!-- 15&#45;&gt;19 -->\n<g id=\"edge19\" class=\"edge\">\n<title>15&#45;&gt;19</title>\n<path fill=\"none\" stroke=\"black\" d=\"M504.84,-235.34C531.41,-214.59 563.66,-189.39 591.24,-167.85\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"593.54,-170.5 599.26,-161.58 589.23,-164.98 593.54,-170.5\"/>\n</g>\n<!-- 17 -->\n<g id=\"node18\" class=\"node\">\n<title>17</title>\n<polygon fill=\"#eca470\" stroke=\"black\" points=\"911,-326 794,-326 794,-258 911,-258 911,-326\"/>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-310.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.341</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-295.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 99</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-280.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [111, 31]</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-265.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = No</text>\n</g>\n<!-- 16&#45;&gt;17 -->\n<g id=\"edge17\" class=\"edge\">\n<title>16&#45;&gt;17</title>\n<path fill=\"none\" stroke=\"black\" d=\"M758.19,-284.9C766.8,-285.55 775.35,-286.2 783.58,-286.83\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"783.58,-290.34 793.82,-287.61 784.11,-283.36 783.58,-290.34\"/>\n</g>\n<!-- 18 -->\n<g id=\"node19\" class=\"node\">\n<title>18</title>\n<polygon fill=\"#e9965a\" stroke=\"black\" points=\"911,-240 794,-240 794,-172 911,-172 911,-240\"/>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-224.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.247</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-209.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 258</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-194.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [356, 60]</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-179.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = No</text>\n</g>\n<!-- 16&#45;&gt;18 -->\n<g id=\"edge18\" class=\"edge\">\n<title>16&#45;&gt;18</title>\n<path fill=\"none\" stroke=\"black\" d=\"M758.19,-239.63C767.08,-236.42 775.92,-233.24 784.4,-230.18\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"785.6,-233.47 793.82,-226.79 783.23,-226.89 785.6,-233.47\"/>\n</g>\n<!-- 20 -->\n<g id=\"node21\" class=\"node\">\n<title>20</title>\n<polygon fill=\"#fefaf6\" stroke=\"black\" points=\"907.5,-154 797.5,-154 797.5,-86 907.5,-86 907.5,-154\"/>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-138.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.5</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-123.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 30</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-108.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [23, 22]</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-93.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = No</text>\n</g>\n<!-- 19&#45;&gt;20 -->\n<g id=\"edge20\" class=\"edge\">\n<title>19&#45;&gt;20</title>\n<path fill=\"none\" stroke=\"black\" d=\"M708.59,-120C732.82,-120 761.58,-120 786.93,-120\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"787.19,-123.5 797.19,-120 787.19,-116.5 787.19,-123.5\"/>\n</g>\n<!-- 21 -->\n<g id=\"node22\" class=\"node\">\n<title>21</title>\n<polygon fill=\"#fae6d7\" stroke=\"black\" points=\"903.5,-68 801.5,-68 801.5,0 903.5,0 903.5,-68\"/>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.494</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 12</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [10, 8]</text>\n<text text-anchor=\"middle\" x=\"852.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = No</text>\n</g>\n<!-- 19&#45;&gt;21 -->\n<g id=\"edge21\" class=\"edge\">\n<title>19&#45;&gt;21</title>\n<path fill=\"none\" stroke=\"black\" d=\"M708.59,-96.39C734.47,-85.09 765.53,-71.53 792.07,-59.95\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"793.48,-63.15 801.25,-55.94 790.68,-56.73 793.48,-63.15\"/>\n</g>\n</g>\n</svg>\n","text/plain":["<graphviz.sources.Source at 0x7f36e4a4a800>"]},"metadata":{},"execution_count":50}]}]}